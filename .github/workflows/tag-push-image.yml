name: tag-push-image

# Controls when the workflow will run
on:
  push:
    tags:
      - 'v*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-docker-image:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        
      - name: get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        
      - name: echo version
        run: echo ${{ steps.get_version.outputs.VERSION }}
      
      - name: echo github ref
        run: echo ${{ github.ref }}

      - name: use node
        uses: actions/setup-node@v1
        with:
          node-version: 14.15.4

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      
      - name: npm install packages
        run: cd ./home-page && npm install

      - name: build project
        run: cd ./home-page && npm run build:ci

      - name: set up docker
        uses: docker/setup-buildx-action@v1

      - name: echo docker version
        run: docker version

      - name: build docker image with specific version tag
        run: cd ./home-page && docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:${{ steps.get_version.outputs.VERSION }} .

      - name: build docker image with latest tag
        run: cd ./home-page && docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest .

      - name: docker login
        run: echo '${{ secrets.DOCKERHUB_PASSWORD }}' | docker login --username=${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: push image to registry
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}${{ steps.get_version.outputs.VERSION }}

      - name: push latest image to registry
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest