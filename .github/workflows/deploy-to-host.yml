name: deploy-alicloud-host

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker Image Tag, E.g. v0.0.0'
        required: true
        default: 'latest'

      test_mode:
        description: "Flag value of test mode"
        required: false
        default: "true"

jobs:
  deploy-to-host:
    runs-on: ubuntu-latest
    
    steps:
      
      - if: github.event.inputs.test_mode == 'true'
        name: run single line script
        run: echo be in test mode

      - name: ssh-pipeline
        # You may pin to the exact commit or the version.
        # uses: cross-the-world/ssh-pipeline@7f022867934a210af826af99ef80d96f03a094d5
        uses: cross-the-world/ssh-pipeline@v1.2.0
        env:
          CONTAINER_NAME: ${{ secrets.DOCKERHUB_REPO }}-web
          IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:${{ github.event.inputs.image_tag }}
        with:
          # ssh remote host
          host: ${{ secrets.ALICLOUD_HOST }}
          # ssh remote user
          user: ${{ secrets.ALICLOUD_USER }}
          # ssh remote password
          pass: ${{ secrets.ALICLOUD_PASSWORD }}
          # execute commands on ssh
          script: # optional |
            echo 'home page starts' &&
            docker pull $IMAGE_NAME &&
            docker stop $CONTAINER_NAME &&
            docker rm $CONTAINER_NAME &&
            docker run -d --name=$CONTAINER_NAME $IMAGE_NAME &&
            echo 'home page done'
